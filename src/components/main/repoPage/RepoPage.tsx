import axios from "axios";
import { useEffect, useState } from "react";
import { Link, useParams } from "react-router-dom";
import { marked } from "marked";
import LanguageList from "./components/LanguageList";
import 'github-markdown-css';

const RepoPage = () => {
    const { name } = useParams<{ name: string }>();
    const [repoInfo, setRepoInfo] = useState<any>(null);
    const [lang, setLang] = useState<{ [key: string]: number }>({});
    const [contributors, setContributors] = useState<any[]>([])
    const [topics, setTopics] = useState<any>(null)
    const [ava, setAva] = useState<string>('')
    const [readmeName, setReadmeName] = useState<String>('')
    const [readme, setReadme] = useState<any>('')

    useEffect(() => {
        axios.get(`https://api.github.com/repos/ktsstudio/${name}`).then(response => {
            setRepoInfo(response.data);
            setTopics(response.data.topics)
            setAva(response.data.owner.avatar_url)
        }).catch(error => {
            console.error("Error fetching repository info:", error);
        });
    }, [name]); 

    useEffect(() => {
        axios.get(`https://api.github.com/repos/ktsstudio/${name}/languages`).then(response => {
            setLang(response.data)
        })
    }, [repoInfo])

    useEffect(() => {
        axios.get(`https://api.github.com/repos/ktsstudio/${name}/contributors`).then(response => {
            setContributors(response.data)
        })
    }, [repoInfo])

    useEffect(() => {
        axios.get(`https://api.github.com/repos/ktsstudio/${name}/readme`).then(response => {
            setReadmeName(response.data.name)
            const markdown = decodeBase64(response.data.content);
            const html = marked(markdown);
            setReadme(html);
        })
    }, [repoInfo])
    
    function decodeBase64(encoded:any) {
        const decoded = atob(encoded);  // Decode base64
        const bytes = new Uint8Array(decoded.length);
        for (let i = 0; i < decoded.length; i++) {
            bytes[i] = decoded.charCodeAt(i);
        }
        const text = new TextDecoder('utf-8').decode(bytes);
        return text;
    }
    

    if (!repoInfo) {
        return (
            <div>
                <svg width="200" height="200" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg" className="loader">
                    <path d="M33.3741 44.6155C25.3022 46.4791 17.2479 41.4462 15.3843 33.3742C13.5207 25.3023 18.5536 17.248 26.6256 15.3844C34.6975 13.5209 42.7518 18.5538 44.6154 26.6257L49.4873 25.501C47.0025 14.7384 36.2634 8.02783 25.5008 10.5126C14.7382 12.9973 8.02771 23.7364 10.5124 34.499C12.9972 45.2616 23.7363 51.9721 34.4989 49.4874L33.3741 44.6155Z" fill="#1F883D" />
                </svg>
            </div>
        ); 
    }

    return (
        <div className="repo__page">
            <div className="repo__page-top">
                <Link to={'/'}>
                <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M20.1201 26.56L11.4268 17.8667C10.4001 16.84 10.4001 15.16 11.4268 14.1333L20.1201 5.44" stroke="#1F883D" strokeWidth="1.5" strokeMiterlimit="10" strokeLinecap="round" strokeLinejoin="round" />
                </svg>
                </Link>
                <img src={`${ava}`} alt="ava" className="repo__page-ava" />
                <span>{repoInfo.name}</span>
            </div>

            <div className="repo__page-middle">
                <Link to={`${repoInfo.html_url}`} className="link" target="_blank">
                    <svg width="16" height="15" viewBox="0 0 16 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9.86174 10.4025C8.95983 10.4025 8.04857 10.0452 7.35996 9.34073C7.06914 9.05293 7.06914 8.57671 7.35996 8.28906C7.64123 8.00126 8.09691 8.00126 8.38772 8.28906C8.79509 8.70591 9.3186 8.91412 9.86161 8.91412C10.3951 8.91412 10.9186 8.70577 11.3355 8.28906L13.9343 5.62978C14.3417 5.20317 14.5452 4.66734 14.5452 4.12159C14.5452 3.56594 14.3415 3.03012 13.9343 2.6134C13.5269 2.19655 12.9938 1.98834 12.4604 1.98834C11.927 1.98834 11.3938 2.19669 10.9865 2.6134L9.68708 3.94309C9.39625 4.2309 8.94043 4.2309 8.65932 3.94309C8.3685 3.6455 8.3685 3.17907 8.65932 2.89142L9.95877 1.56173C10.6473 0.847303 11.5588 0.5 12.4606 0.5C13.3622 0.5 14.2737 0.847303 14.9623 1.56173C15.6508 2.26623 15.9999 3.18903 15.9999 4.12172C15.9999 5.04462 15.6508 5.97708 14.9623 6.68171L12.3635 9.3406C11.6749 10.0452 10.7634 10.4025 9.86174 10.4025Z" fill="black" />
                        <path d="M8.63995 5.65926C8.92121 5.94707 8.92121 6.42328 8.63995 6.71093C8.35868 7.00853 7.8933 7.00853 7.61219 6.71093C7.20482 6.29409 6.67164 6.08587 6.1383 6.08587C5.60486 6.08587 5.07165 6.29423 4.6644 6.71093L2.06559 9.37022C1.65823 9.79683 1.45475 10.3327 1.45475 10.8784C1.45475 11.4341 1.65836 11.9699 2.06559 12.3866C2.47296 12.8034 2.99648 13.0117 3.53949 13.0117C4.07292 13.0117 4.59644 12.8033 5.01338 12.3866L6.31283 11.0569C6.5941 10.7691 7.04978 10.7691 7.34059 11.0569C7.62185 11.3545 7.62185 11.8209 7.34059 12.1086L6.04114 13.4383C5.35266 14.1527 4.44114 14.5 3.53936 14.5C2.62788 14.5 1.72619 14.1527 1.03758 13.4383C0.349105 12.7338 0 11.811 0 10.8783C0 9.95538 0.339405 9.02291 1.03758 8.31828L3.63639 5.65926C4.32487 4.95476 5.23639 4.59753 6.13817 4.59753C7.03986 4.59741 7.9516 4.95463 8.63995 5.65926Z" fill="black" />
                    </svg>
                    <span>
                        {repoInfo.name}
                    </span>
                </Link>

                <ul className="repo__page-topics">
                    {topics.map((topic:any, index:number) => (
                        <li key={index}>{topic}</li>
                    ))}
                </ul>

                <ul className="repo_page-stars-watch-forks">
                    <li>
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fillRule="evenodd" clipRule="evenodd" d="M7.99992 0.25C8.13993 0.24991 8.27718 0.289014 8.39612 0.362887C8.51506 0.43676 8.61094 0.542452 8.67292 
                            0.668L10.5549 4.483L14.7649 5.095C14.9034 5.11511 15.0335 5.17355 15.1404 5.26372C15.2474 5.35388 15.3271 5.47218 15.3703 5.60523C15.4136 5.73829 
                            15.4188 5.8808 15.3853 6.01665C15.3519 6.1525 15.2811 6.27628 15.1809 6.374L12.1349 9.344L12.8539 13.536C12.8776 13.6739 12.8623 13.8157 12.8096 
                            13.9454C12.7569 14.0751 12.669 14.1874 12.5558 14.2697C12.4426 14.352 12.3086 14.401 12.169 14.4111C12.0294 14.4212 11.8898 14.3921 11.7659 
                            14.327L7.99992 12.347L4.23392 14.327C4.11011 14.392 3.97059 14.4211 3.83111 14.411C3.69163 14.4009 3.55776 14.352 3.4446 14.2699C3.33144 14.1877 3.24351 
                            14.0755 3.19073 13.946C3.13796 13.8165 3.12243 13.6749 3.14592 13.537L3.86592 9.343L0.81792 6.374C0.717487 6.27632 0.64642 6.15247 0.612772 6.01647C0.579125 
                            5.88047 0.584242 5.73777 0.627545 5.60453C0.670847 5.47129 0.750604 5.35284 0.857776 5.26261C0.964948 5.17238 1.09525 5.11397 1.23392 5.094L5.44392 
                            4.483L7.32692 0.668C7.3889 0.542452 7.48479 0.43676 7.60372 0.362887C7.72266 0.289014 7.85991 0.24991 7.99992 0.25ZM7.99992 2.695L6.61492 5.5C6.56114 
                            5.6089 6.48171 5.70311 6.38346 5.77453C6.28522 5.84595 6.1711 5.89244 6.05092 5.91L2.95392 6.36L5.19392 8.544C5.28107 8.62886 5.34628 8.73365 5.38391 
                            8.84933C5.42154 8.96501 5.43046 9.0881 5.40992 9.208L4.88192 12.292L7.65092 10.836C7.75855 10.7794 7.87832 10.7499 7.99992 10.7499C8.12152 10.7499 8.24129 
                            10.7794 8.34892 10.836L11.1189 12.292L10.5889 9.208C10.5684 9.0881 10.5773 8.96501 10.6149 8.84933C10.6526 8.73365 10.7178 8.62886 10.8049 8.544L13.0449 
                            6.361L9.94892 5.911C9.82874 5.89344 9.71462 5.84695 9.61638 5.77553C9.51813 5.70411 9.4387 5.6099 9.38492 5.501L7.99992 2.694V2.695Z" fill="#AFADB5" />
                        </svg>
                        <span>{repoInfo.stargazers_count} {repoInfo.stargazers_count.length > 3 ? 'stars' : 'star'}</span>
                    </li>

                    <li>
                    <svg width="14" height="10" viewBox="0 0 14 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M7 0C4.17033 0 1.58194 1.75154 0.0757531 4.68526C-0.025251 4.882 -0.025251 5.11772 0.0757531 5.31444C1.58197 8.24837 4.17053 10 7 10C9.82947 10 12.4181 
                        8.24846 13.9242 5.31474C14.0253 5.118 14.0253 4.88228 13.9242 4.68556C12.418 1.75175 9.82976 0.000299443 7 0.000299443V0ZM7 8.65746C4.75993 8.65746 2.6855 7.29718 
                        1.39208 4.99955C2.68541 2.70228 4.75985 1.34194 7 1.34194C9.24016 1.34194 11.3145 2.70222 12.6079 4.99955C11.3146 7.29706 9.24016 8.65746 7 8.65746Z" fill="#AFADB5" />
                        <ellipse cx="6.85914" cy="4.97725" rx="1.55446" ry="1.60665" fill="#AFADB5" />
                    </svg>
                        <span>{repoInfo.watchers_count} {'watching'}</span>
                    </li>

                    <li>
                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M14 3.00536C14.0019 2.50413 13.8151 2.02059 13.4768 1.65056C13.1384 1.28041 12.6731 1.05097 12.1732 1.0075C11.6734 0.964132 11.1754 1.10996 10.7782 
                        1.41609C10.381 1.72234 10.1135 2.1664 10.0288 2.66042C9.94398 3.15443 10.0482 3.66226 10.3208 4.08301C10.5933 4.50388 11.0142 4.80701 11.5 4.93233V7.50056C11.5 
                        7.63301 11.4473 7.7601 11.3536 7.85375C11.2598 7.9474 11.1326 8.00003 11 8.00003H5C4.86741 8.00003 4.74017 7.9474 4.64642 7.85375C4.55267 7.7601 4.49999 7.63301 
                        4.49999 7.50056V4.93233C5.13394 4.76878 5.64754 4.30577 5.87523 3.69257C6.10279 3.0794 6.01563 2.39373 5.64174 1.85693C5.26786 1.32011 4.65468 1.00005 4 
                        1.00005C3.34531 1.00005 2.73214 1.32014 2.35825 1.85693C1.98436 2.39376 1.89719 3.0794 2.12477 3.69257C2.35245 4.30575 2.86605 4.76877 3.5 4.93233V7.50056C3.5 
                        7.89802 3.65803 8.27907 3.93929 8.56014C4.22065 8.84109 4.60211 8.99896 5 8.99896H7.50001V11.0677C6.86606 11.2313 6.35246 11.6943 6.12477 12.3075C5.89721 12.9207 
                        5.98437 13.6063 6.35826 14.1431C6.73214 14.6799 7.34532 15 8 15C8.65469 15 9.26786 14.6799 9.64175 14.1431C10.0156 13.6063 10.1028 12.9207 9.87523 12.3075C9.64755 
                        11.6943 9.13395 11.2313 8.5 11.0677V8.99896H11C11.3979 8.99896 11.7794 8.84109 12.0607 8.56014C12.342 8.27908 12.5 7.89802 12.5 7.50056V4.93233C12.9281 4.82196 
                        13.3075 4.57289 13.5789 4.22426C13.8502 3.87563 13.9983 3.44698 14 3.00536ZM2.99996 3.00536C2.99996 2.74047 3.10532 2.48638 3.29282 2.29898C3.48043 2.11168 
                        3.73479 2.00643 3.99997 2.00643C4.26514 2.00643 4.51951 2.11168 4.70711 2.29898C4.89461 2.48639 4.99997 2.74048 4.99997 3.00536C4.99997 3.27025 4.89461 3.52435 
                        4.70711 3.71175C4.5195 3.89905 4.26514 4.0043 3.99997 4.0043C3.73479 4.0043 3.48042 3.89905 3.29282 3.71175C3.10532 3.52434 2.99996 3.27025 2.99996 
                        3.00536ZM8.99997 12.9947C8.99997 13.2596 8.89462 13.5137 8.70712 13.7011C8.51951 13.8884 8.26514 13.9936 7.99997 13.9936C7.7348 13.9936 7.48043 13.8884 7.29283 
                        13.7011C7.10533 13.5137 6.99997 13.2596 6.99997 12.9947C6.99997 12.7298 7.10533 12.4757 7.29283 12.2883C7.48044 12.101 7.7348 11.9958 7.99997 11.9958C8.26514 
                        11.9958 8.51952 12.101 8.70712 12.2883C8.89462 12.4757 8.99997 12.7298 8.99997 12.9947ZM12 4.0043C11.7348 4.0043 11.4804 3.89905 11.2928 3.71175C11.1053 3.52434 
                        11 3.27025 11 3.00536C11 2.74048 11.1053 2.48638 11.2928 2.29898C11.4804 2.11168 11.7348 2.00643 12 2.00643C12.2652 2.00643 12.5195 2.11168 12.7071 2.29898C12.8946 
                        2.48639 13 2.74048 13 3.00536C13 3.27025 12.8946 3.52435 12.7071 3.71175C12.5195 3.89905 12.2652 4.0043 12 4.0043Z" fill="#AFADB5" />
                    </svg>
                        <span>{repoInfo.forks_count} {'forks'}</span>
                    </li>
                </ul>
                
                <div className="repo__page-contributors-languages">
                    <div>
                        <span>Contributors <span className="repo__page-contributors-count">{contributors.length}</span></span>
                        <ul>
                            {contributors.map((contributor: any, index: number) => (
                                <li key={index} className="repo__page-contributor">
                                    <img src={contributor.avatar_url} alt="contributor ava" className="repo__page-contributor-ava"/>
                                    {contributor.login}
                                </li>
                            ))}
                        </ul>
                    </div>

                    <div>
                        <span>Languages</span>
                        {lang && <LanguageList languages={lang} />}
                    </div>

                </div>
            </div>

            <div className="markdown-body repo__page-readme"  dangerouslySetInnerHTML={{ __html: readme }} />

        </div>
    );
};

export default RepoPage;